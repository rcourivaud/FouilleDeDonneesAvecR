#-> indice de Kaiser
axe.kaiser<-which(ca$eig[,1] >= 1)
#-> intervalle de confiance d'Anderson
Icm<-ca$eig[,1]*exp(-1.96*sqrt(2/(nb.ind-1)))
Icp<-ca$eig[,1]*exp(+1.96*sqrt(2/(nb.ind-1)))
axe.anderson<-as.matrix(cbind(Icm,ca$eig[,1],Icp),ncol = 3)
lam.star <-matrix(0,ncol = nb.axe,nrow = B)
for (i in 1 : B)
#-> boostrap total sur les axes
B = 1000 ; alpha = 0.1 ; nb.axe <-4
{ boot.lam<- sample(size<-seq(1,nb.ind), replace = TRUE)
df.num.star <- df.num[boot.lam,]
ca.star<-CA(df.num.star,graph = FALSE)
{ lam.star[i,j]<-ca.star$eig[j,1]}
for (j in 1 : nb.axe)
}
lam.star.mean <-mean(lam.star[,1])
B = 1000 ; alpha = 0.1 ; nb.axe <-4
lam.star <-matrix(0,ncol = nb.axe,nrow = B)
for (i in 1 : B)
{ boot.lam<- sample(size<-seq(1,nb.ind), replace = TRUE)
df.num.star <- df.num[boot.lam,]
ca.star<-CA(df.num.star,graph = FALSE)
for (j in 1 : nb.axe)
{ lam.star[i,j]<-ca.star$eig[j,1]}
}
IM_Loc_01_cat <- as.factor(ifelse(df.2001$IM_Loc_01<= -6000, 'VHD',
ifelse(df.2001$IM_Loc_01>=-6000 & df.2001$IM_Loc_01<0 , 'HD',
ifelse(df.2001$IM_Loc_01>=0 & df.2001$IM_Loc_01<6000 , 'HA',
ifelse(df.2001$IM_Loc_01>=6000 , 'VHA', 0)))))
POP_01_cat <- as.factor(ifelse(df.2001$Pop_Tot_01< 1000000, 'LP',
ifelse(df.2001$Pop_Tot_01>=1000000 & df.2001$Pop_Tot_01<3500000 , 'MP',
ifelse(df.2001$Pop_Tot_01>=3500000 & df.2001$Pop_Tot_01<8000000 , 'HP',
ifelse(df.2001$Pop_Tot_01>=8000000 , 'VHP', 0)))))
hist(df.2001$IM_Int_01, breaks=100)
IM_INT_01_cat <- as.factor(ifelse(df.2001$IM_Int_01< 10000, 'LD',
ifelse(df.2001$IM_Int_01>=10000 & df.2001$IM_Int_01<25000 , 'MD',
ifelse(df.2001$IM_Int_01>=25000 & df.2001$IM_Int_01<50000 , 'HD',
ifelse(df.2001$IM_Int_01>=50000 , 'VHD', 0)))))
hist(df.2001$Nb_Nai_01, breaks=100)
Nb_Nai_01_cat <- as.factor(ifelse(df.2001$Nb_Nai_01< 25000, 'LN',
ifelse(df.2001$Nb_Nai_01>=25000 & df.2001$Nb_Nai_01<50000 , 'MN',
ifelse(df.2001$Nb_Nai_01>=50000 & df.2001$Nb_Nai_01<110000 , 'HN',
ifelse(df.2001$Nb_Nai_01>=110000 , 'VHN', 0)))))
hist(df.2001$Nb_DC_01, breaks=100)
Nb_DC_01_cat <- as.factor(ifelse(df.2001$Nb_DC_01< 15000, 'LDC',
ifelse(df.2001$Nb_DC_01>=15000 & df.2001$Nb_DC_01<30000 , 'MDC',
ifelse(df.2001$Nb_DC_01>=30000 & df.2001$Nb_DC_01<60000 , 'HDC',
ifelse(df.2001$Nb_DC_01>=60000 , 'VHDC', 0)))))
hist(df.2001$Pop_inf_65_01, breaks=100)
Pop_inf_65_01_cat <- as.factor(ifelse(df.2001$Pop_inf_65_01< 1000000, 'LP',
ifelse(df.2001$Pop_inf_65_01>=1000000 & df.2001$Pop_inf_65_01<3500000 , 'MP',
ifelse(df.2001$Pop_inf_65_01>=3500000 & df.2001$Pop_inf_65_01<8000000 , 'HP',
ifelse(df.2001$Pop_inf_65_01>=8000000 , 'VHP', 0)))))
hist(df.2001$Pop_Sup_65_01, breaks=100)
Pop_Sup_65_01_cat <- as.factor(ifelse(df.2001$Pop_Sup_65_01< 400000, 'LP',
ifelse(df.2001$Pop_Sup_65_01>=400000 & df.2001$Pop_Sup_65_01<800000 , 'MP',
ifelse(df.2001$Pop_Sup_65_01>=800000 & df.2001$Pop_Sup_65_01<1100000 , 'HP',
ifelse(df.2001$Pop_Sup_65_01>=1100000 , 'VHP', 0)))))
df.2001['IM_LOC'] <- IM_Loc_01_cat
df.2001['POP'] <- POP_01_cat
df.2001['IM_INT'] <- IM_INT_01_cat
df.2001['NB_NAI'] <- Nb_Nai_01_cat
df.2001['NB_DC'] <- Nb_DC_01_cat
df.2001['POP_INF'] <- Pop_inf_65_01_cat
df.2001['POP_SUP'] <- Pop_Sup_65_01_cat
hist(df$IM_Loc_01, breaks=100)
png("HistoIm_loc.png")
hist(df$IM_Loc_01, breaks=100)
dev.off()
df.2001.AFCM <- df.2001[,c(9:15)]
df.2001
df.2001 <- df[,c(1, 3, 5, 7, 9, 11, 13, 15)]
df.2001['IM_LOC'] <- IM_Loc_01_cat
df.2001['POP'] <- POP_01_cat
df.2001['IM_INT'] <- IM_INT_01_cat
df.2001['NB_NAI'] <- Nb_Nai_01_cat
df.2001['NB_DC'] <- Nb_DC_01_cat
df.2001['POP_INF'] <- Pop_inf_65_01_cat
df.2001['POP_SUP'] <- Pop_Sup_65_01_cat
df.2001.AFCM <- df.2001[,c(9:15)]
df.2001.AFCM
res.mca = MCA(df.2001.AFCM)
dimdesc(res.mca)
png("EllispseAFC6.png")
plotellipses(res.mca,keepvar=c(1:6))
dev.off()
plotellipses(res.mca,keepvar=c(1,6))
plotellipses(res.mca,keepvar=c(2,5))
plotellipses(res.mca,keepvar=c(2,4))
plotellipses(res.mca,keepvar=c(5,4))
png("EllispseDC_NAI.png")
plotellipses(res.mca,keepvar=c(5,4))
dev.off()
df.2001.AFCM
plotellipses(res.mca,keepvar=c(1:2))
plotellipses(res.mca,keepvar=c(6,7))
png("EllispseINF_SUP.png")
plotellipses(res.mca,keepvar=c(6,7))
dev.off()
plotellipses(res.mca,keepvar=c(1,2,3))
plotellipses(res.mca,keepvar=c(3))
plotellipses(res.mca,keepvar=3)
png("EllispsePop_IM.png")
plotellipses(res.mca,keepvar=c(1,2,3))
dev.off()
ca
res.mca
inertie<-matrix(c(seq(1,7,1),res.mca$eig[,3]),ncol = 2) ;
colnames(inertie)<-c('axe','% inertie cumul?e')
plot(inertie[,2]~inertie[,1],type = 'b',xlab='axe',ylab='% inertie cumul?e')
axe.kaiser<-which(res.mca$eig[,1] >= 1)
#-> intervalle de confiance d'Anderson
Icm<-ca$eig[,1]*exp(-1.96*sqrt(2/(nb.ind-1)))
Icp<-ca$eig[,1]*exp(+1.96*sqrt(2/(nb.ind-1)))
#-> boostrap total sur les axes
B = 2000 ; alpha = 0.1 ; nb.axe <-4
lam.star <-matrix(0,ncol = nb.axe,nrow = B)
for (i in 1 : B)
{ boot.lam<- sample(size<-seq(1,nb.ind), replace = TRUE)
df.num.star <- df.2001.AFCM[boot.lam,]
mca.star<-MCA(df.num.star,graph = FALSE)
for (j in 1 : nb.axe)
{ lam.star[i,j]<-ca.star$eig[j,1]}
}
lam.star.mean <-mean(lam.star[,1])
lam.star.sd <- sd(lam.star[,1])
qt<-quantile(lam.star[,1], c(alpha/2, 1 - alpha/2))
ICm<-qt[[1]] ;
ICp<-qt[[2]]
# histogramme
hist(lam.star[,1],nclass = 50,cex.main = 0.8,freq = FALSE, cex.lab = 0.7,proba=TRUE, main = paste("f2 boostrap : nb = ", B,sep = "" ))
s<-seq(min(lam.star[,1]),max(lam.star[,1]),le=50)
hist(lam.star[,1],nclass = 50,cex.main = 0.8,freq = FALSE, cex.lab = 0.7,proba=TRUE, main = paste("f2 boostrap : nb = ", B,sep = "" ))
lam.star.mean
lam.star
abline(v=mean(lam.star[,1]),col = 'red')
abline(v=median(lam.star[,1]),col = 'blue')
abline(v=ICm,col = 'red',lty = 2)
abline(v=ICp,col = 'red',lty = 2)
# graphique des densit?s des axes s?lectionn?s
plot(density(lam.star[,1]),col  = 'blue',lty = 1,type ='l',xlim=c(0,10), ylim =c(0,max(lam.star)),
main = 'densit? axes',cex.main = 0.6,xlab = '',ylab = '')
text(x=mean(lam.star[,1]),y = 1,label = paste('Axe ',1,sep = ''),cex =0.7,col = 'red')
for (i in 2: nb.axe)
lines(density(lam.star[,i]),col = 'blue' ,lty = 1)
text(x=mean(lam.star[,i]),y = 1,label = paste('Axe ',i,sep = ''),cex =0.7,col = 'red')
{
}
nb.ind <- dim(df.2001.AFCM)[1]
stat.sum <-apply(df.2001.AFCM,2,summary) ;
stat.sd  <-apply(df.2001.AFCM,2,sd)
pca.stat <-rbind(stat.sum,stat.sd)
ca.cor<-cor(df.2001.AFCM)
B = 2000 ; alpha = 0.1 ; nb.axe <-4
lam.star <-matrix(0,ncol = nb.axe,nrow = B)
for (i in 1 : B)
{ boot.lam<- sample(size<-seq(1,nb.ind), replace = TRUE)
df.num.star <- df.2001.AFCM[boot.lam,]
mca.star<-MCA(df.num.star,graph = FALSE)
for (j in 1 : nb.axe)
{ lam.star[i,j]<-mca.star$eig[j,1]}
}
lam.star
lam.star.mean <-mean(lam.star[,1])
lam.star.sd <- sd(lam.star[,1])
qt<-quantile(lam.star[,1], c(alpha/2, 1 - alpha/2))
ICm<-qt[[1]] ;
ICp<-qt[[2]]
# histogramme
hist(lam.star[,1],nclass = 50,cex.main = 0.8,freq = FALSE, cex.lab = 0.7,proba=TRUE, main = paste("f2 boostrap : nb = ", B,sep = "" ))
s<-seq(min(lam.star[,1]),max(lam.star[,1]),le=50)
# distribution normale et densit?
prov<- dnorm(s,lam.star.mean,lam.star.sd)
lines(prov~s,col = 'red')
lines(density(lam.star[,1]),col = 'blue',lty = 2)
# limite des intervalles de confiance et moyenne + m?diane
abline(v=mean(lam.star[,1]),col = 'red')
abline(v=median(lam.star[,1]),col = 'blue')
abline(v=ICm,col = 'red',lty = 2)
abline(v=ICp,col = 'red',lty = 2)
# graphique des densit?s des axes s?lectionn?s
plot(density(lam.star[,1]),col  = 'blue',lty = 1,type ='l',xlim=c(0,10), ylim =c(0,max(lam.star)),
main = 'densit? axes',cex.main = 0.6,xlab = '',ylab = '')
text(x=mean(lam.star[,1]),y = 1,label = paste('Axe ',1,sep = ''),cex =0.7,col = 'red')
for (i in 2: nb.axe)
{
lines(density(lam.star[,i]),col = 'blue' ,lty = 1)
text(x=mean(lam.star[,i]),y = 1,label = paste('Axe ',i,sep = ''),cex =0.7,col = 'red')
}
max(lam.star)
plot(density(lam.star[,1]),col  = 'blue',lty = 1,type ='l',xlim=c(0,3), ylim =c(0,2),
main = 'densit? axes',cex.main = 0.6,xlab = '',ylab = '')
plot(density(lam.star[,1]),col  = 'blue',lty = 1,type ='l',xlim=c(0,3), ylim =c(0,10),
main = 'densit? axes',cex.main = 0.6,xlab = '',ylab = '')
plot(density(lam.star[,1]),col  = 'blue',lty = 1,type ='l',xlim=c(0,3), ylim =c(0,max(lam.star[,1]),
main = 'densit? axes',cex.main = 0.6,xlab = '',ylab = '')
plot(density(lam.star[,1]),col  = 'blue',lty = 1,type ='l',xlim=c(0,3), ylim =c(0,max(lam.star[,1])),
main = 'densit? axes',cex.main = 0.6,xlab = '',ylab = '')
plot(density(lam.star[,1]),col  = 'blue',lty = 1,type ='l',xlim=c(0,3), ylim =c(0,max(lam.star[,1])),
main = 'densit? axes',cex.main = 0.6,xlab = '',ylab = '')
plot(density(lam.star[,1]),col  = 'blue',lty = 1,type ='l',xlim=c(0,3), ylim =c(0,100),
main = 'densit? axes',cex.main = 0.6,xlab = '',ylab = '')
plot(density(lam.star[,1]),col  = 'blue',lty = 1,type ='l',xlim=c(0,3), ylim =c(0,25),
main = 'densit? axes',cex.main = 0.6,xlab = '',ylab = '')
text(x=mean(lam.star[,1]),y = 1,label = paste('Axe ',1,sep = ''),cex =0.7,col = 'red')
for (i in 2: nb.axe)
{
lines(density(lam.star[,i]),col = 'blue' ,lty = 1)
text(x=mean(lam.star[,i]),y = 1,label = paste('Axe ',i,sep = ''),cex =0.7,col = 'red')
}
plot(density(lam.star[,1]),col  = 'blue',lty = 1,type ='l',xlim=c(0,3), ylim =c(0,20),
main = 'densit? axes',cex.main = 0.6,xlab = '',ylab = '')
text(x=mean(lam.star[,1]),y = 1,label = paste('Axe ',1,sep = ''),cex =0.7,col = 'red')
for (i in 2: nb.axe)
{
lines(density(lam.star[,i]),col = 'blue' ,lty = 1)
text(x=mean(lam.star[,i]),y = 1,label = paste('Axe ',i,sep = ''),cex =0.7,col = 'red')
}
plot(density(lam.star[,1]),col  = 'blue',lty = 1,type ='l',xlim=c(0,1), ylim =c(0,20),
main = 'densit? axes',cex.main = 0.6,xlab = '',ylab = '')
text(x=mean(lam.star[,1]),y = 1,label = paste('Axe ',1,sep = ''),cex =0.7,col = 'red')
for (i in 2: nb.axe)
{
lines(density(lam.star[,i]),col = 'blue' ,lty = 1)
text(x=mean(lam.star[,i]),y = 1,label = paste('Axe ',i,sep = ''),cex =0.7,col = 'red')
}
mca.var<- res.mca$col$coord ;
colnames(mca.var)<-paste('axes ',seq(1,5,1),sep ='')
mca.var.qlt<-res.mca$col$cos2[,c(1,2)]
mca.var.qlt<-cbind(mca.var.qlt,(apply(mca.var.qlt,1,sum))) ;
colnames(mca.var.qlt)[3]<-'Sum qtl'
mca.var
res.mca
mca.var<- res.mca$var$coord ;
colnames(mca.var)<-paste('axes ',seq(1,5,1),sep ='')
res.mca
mca.var.qlt<-res.mca$var$cos2[,c(1,2)]
mca.var.qlt<-cbind(mca.var.qlt,(apply(mca.var.qlt,1,sum))) ;
colnames(mca.var.qlt)[3]<-'Sum qtl'
mca.ind     <- ca$ind$coord ;
mca.ind     <- res.mca$ind$coord ;
colnames(mca.ind)<-paste('axes ',seq(1,5,1),sep ='')
ca.ind.ctr <- ca$row$contrib[,c(1,2)]
plot(res.mca, axe=c(1,2))
plot(res.mca, axe=c(1,2, 3))
plot(res.mca, axe=c(3,2))
plot(res.mca, axe=c(2,3))
plot(res.mca, axe=c(1,2))
plot.MCA(res.mca, invisible=c("ind"))
plot.MCA(res.mca, invisible=c("ind", "var"))
plot.MCA(res.mca, invisible=c("ind"))
plot.MCA(res.mca, invisible=c("var"))
plot(inertie[,2]~inertie[,1],type = 'b',xlab='axe',ylab='% inertie cumul?e')
png("AxeKaiser.png")
plot(inertie[,2]~inertie[,1],type = 'b',xlab='axe',ylab='% inertie cumul?e')
dev.off()
res.mca = MCA(df.2001.AFCM)
#-------------------- NB AXES ET INERTIE -----------------------
#-> inertie
inertie<-matrix(c(seq(1,7,1),res.mca$eig[,3]),ncol = 2) ;
colnames(inertie)<-c('axe','% inertie cumul?e')
png("AxeKaiser.png")
plot(inertie[,2]~inertie[,1],type = 'b',xlab='axe',ylab='% inertie cumul?e')
dev.off()
#-> indice de Kaiser
axe.kaiser<-which(res.mca$eig[,1] >= 1)
#-> intervalle de confiance d'Anderson
Icm<-ca$eig[,1]*exp(-1.96*sqrt(2/(nb.ind-1)))
Icp<-ca$eig[,1]*exp(+1.96*sqrt(2/(nb.ind-1)))
axe.anderson<-as.matrix(cbind(Icm,res.mca$eig[,1],Icp),ncol = 3)
#-> boostrap total sur les axes
B = 2000 ; alpha = 0.1 ; nb.axe <-4
lam.star <-matrix(0,ncol = nb.axe,nrow = B)
for (i in 1 : B)
{ boot.lam<- sample(size<-seq(1,nb.ind), replace = TRUE)
df.num.star <- df.2001.AFCM[boot.lam,]
mca.star<-MCA(df.num.star,graph = FALSE)
for (j in 1 : nb.axe)
{ lam.star[i,j]<-mca.star$eig[j,1]}
}
lam.star.mean <-mean(lam.star[,1])
lam.star.sd <- sd(lam.star[,1])
qt<-quantile(lam.star[,1], c(alpha/2, 1 - alpha/2))
ICm<-qt[[1]] ;
ICp<-qt[[2]]
# histogramme
png("Bootstrap.png")
hist(lam.star[,1],nclass = 50,cex.main = 0.8,freq = FALSE, cex.lab = 0.7,proba=TRUE, main = paste("f2 boostrap : nb = ", B,sep = "" ))
s<-seq(min(lam.star[,1]),max(lam.star[,1]),le=50)
# distribution normale et densit?
prov<- dnorm(s,lam.star.mean,lam.star.sd)
lines(prov~s,col = 'red')
lines(density(lam.star[,1]),col = 'blue',lty = 2)
# limite des intervalles de confiance et moyenne + m?diane
abline(v=mean(lam.star[,1]),col = 'red')
abline(v=median(lam.star[,1]),col = 'blue')
abline(v=ICm,col = 'red',lty = 2)
abline(v=ICp,col = 'red',lty = 2)
dev.off()
# graphique des densit?s des axes s?lectionn?s
png("AxesDensity.png")
plot(density(lam.star[,1]),col  = 'blue',lty = 1,type ='l',xlim=c(0,1), ylim =c(0,20),
main = 'densit? axes',cex.main = 0.6,xlab = '',ylab = '')
text(x=mean(lam.star[,1]),y = 1,label = paste('Axe ',1,sep = ''),cex =0.7,col = 'red')
for (i in 2: nb.axe)
{
lines(density(lam.star[,i]),col = 'blue' ,lty = 1)
text(x=mean(lam.star[,i]),y = 1,label = paste('Axe ',i,sep = ''),cex =0.7,col = 'red')
}
dev.off()
colnames(df)
df01 <- df[,c(3,5,7,9,11,13,15)]
ca.cor<-cor(df01)
col <- colorRampPalette(c("#BB4444", "#EE9988", "#FFFFFF", "#77AADD", "#4477AA"))
df01.cor<-cor(df01)
col <- colorRampPalette(c("#BB4444", "#EE9988", "#FFFFFF", "#77AADD", "#4477AA"))
png("Corrélation.png")
corrplot(df01.cor, method="shade", shade.col=NA, tl.col="black", tl.srt=45,col=col(200), addCoef.col="black", addcolorlabel="no", order="AOE")
#-> Graphique en pairs
dev.off()
df01
dimdesc(res.mca)
plot(res.mca, axe=c(1,2))
png("MCAPlot.png")
plot(res.mca, axe=c(1,2))
dev.off()
png("VariableMCA.png")
plot.MCA(res.mca, invisible=c("ind"))
dev.off()
png("IndividusMCA.png")
plot.MCA(res.mca, invisible=c("var"))
dev.off()
mca.ind
inertie<-matrix(c(seq(1,7,1),res.mca$eig[,3]),ncol = 2) ;
interie
inertie
res.mca$eig
res.mca$eig[,3]
inertie<-matrix(c(seq(1,21,1),res.mca$eig[,3]),ncol = 2) ;
inertie
colnames(inertie)<-c('axe','% inertie cumul?e')
plot(inertie[,2]~inertie[,1],type = 'b',xlab='axe',ylab='% inertie cumul?e')
png("AxeKaiser.png")
plot(inertie[,2]~inertie[,1],type = 'b',xlab='axe',ylab='% inertie cumul?e')
dev.off()
df01
df.2001.AFCM
test <- cbind(df01, df.2001.AFCM)
res.mca = MCA(test)
res.mca = MCA(df.2001.AFCM, quanti.sup = df01)
png("AxesDensity.png")
plot(density(lam.star[,1]),col  = 'blue',lty = 1,type ='l',xlim=c(0,1), ylim =c(0,20),
main = 'densit? axes',cex.main = 0.6,xlab = '',ylab = '')
text(x=mean(lam.star[,1]),y = 1,label = paste('Axe ',1,sep = ''),cex =0.7,col = 'red')
for (i in 2: nb.axe)
{
lines(density(lam.star[,i]),col = 'blue' ,lty = 1)
text(x=mean(lam.star[,i]),y = 1,label = paste('Axe ',i,sep = ''),cex =0.7,col = 'red')
}
dev.off()
ca.ind.ctr
mca.var.qlt
ggplot(df, aes(x=df.2001.AFCM$POP, y=df.2001.AFCM$num)) +
geom_bar(stat="identity", fill="lightblue")
ggsave("NbClasse.png")
library(ggplot2)
ggplot(df, aes(x=df.2001.AFCM$POP, y=df.2001.AFCM$num)) +
geom_bar(stat="identity", fill="lightblue")
ggsave("NbClasse.png")
ggplot(df.2001.AFCM, aes(x=df.2001.AFCM$POP, y=df.2001.AFCM$num)) +
geom_bar(stat="identity", fill="lightblue")
df.2001.AFCM
df.2001.AFCM$num <- 1
ggplot(df.2001.AFCM, aes(x=df.2001.AFCM$POP, y=df.2001.AFCM$num)) +
geom_bar(stat="identity", fill="lightblue")
ggsave("HistoPopu.png")
df
ggplot(df, aes(y=df$State, x=df$Pop_Tot_01)) +
geom_point(size=4) +
scale_colour_brewer(palette="Set1")
ggsave("StatePopu.png")
ggplot(df.2001.AFCM, aes(x=df.2001.AFCM$IM_INT, y=df.2001.AFCM$num)) +
geom_bar(stat="identity", fill="lightblue")
ggplot(df.2001.AFCM, aes(x=df.2001.AFCM$IM_LOC, y=df.2001.AFCM$num)) +
geom_bar(stat="identity", fill="lightblue")
ggplot(df, aes(y=df$State, x=df$IM_Loc_01)) +
geom_point(size=4) +
scale_colour_brewer(palette="Set1")
ggplot(df, aes(y=df$State, x=df$IM_Loc_01)) +
geom_point(size=4) +
scale_colour_brewer(palette="Set1")
ggsave("ImLOC01.png")
ggplot(df, aes(y=df$State, x=df$IM_Loc_00)) +
geom_point(size=4) +
scale_colour_brewer(palette="Set1")
ggsave("ImLOC00.png")
ggplot(df, aes(x=df$IM_Loc_01, x=df$IM_Int_01)) +
geom_point(size=4) +
scale_colour_brewer(palette="Set1")
ggplot(df, aes(x=df$IM_Loc_01, y=df$IM_Int_01)) +
geom_point(size=4) +
scale_colour_brewer(palette="Set1")
ggplot(df, aes(x=df$IM_Loc_01, y=df$IM_Int_01)) +
geom_text(aes(label=df$State), vjust=-0.2) +
geom_point(size=4) +
scale_colour_brewer(palette="Set1")
ggplot(df, aes(x=df$IM_Loc_01, y=df$IM_Int_01)) +
geom_text(aes(label=df$State), vjust=-0.2) +
geom_point(size=4) +
scale_colour_brewer(palette="Set1")
ggsave("ImiLocInt.png")
ggplot(df, aes(x=df$IM_Loc_01, y=df$IM_Int_01)) +
geom_text(aes(label=df$State), vjust=-10) +
geom_point(size=4) +
scale_colour_brewer(palette="Set1")
ggsave("ImiLocInt.png")
ggplot(df, aes(x=df$IM_Loc_01, y=df$IM_Int_01)) +
geom_text(aes(label=df$State), vjust=-1) +
geom_point(size=4) +
scale_colour_brewer(palette="Set1")
ggsave("ImiLocInt.png")
ggplot(df, aes(x=df$IM_Loc_01, y=df$IM_Int_01)) +
geom_text(aes(label=df$State), vjust=-1) +
geom_point(size=df$Pop_Tot_01) +
scale_colour_brewer(palette="Set1")
ggsave("ImiLocInt.png")
ggplot(df, aes(x=df$IM_Loc_01, y=df$IM_Int_01, size=df$Pop_Tot_01)) +
geom_text(aes(label=df$State), vjust=-1) +
geom_point(size=df$Pop_Tot_01) +
scale_colour_brewer(palette="Set1")
ggsave("ImiLocInt.png")
ggplot(df, aes(x=df$IM_Loc_01, y=df$IM_Int_01, size=df$Pop_Tot_01)) +
geom_text(aes(label=df$State), vjust=-1) +
geom_point() +
scale_colour_brewer(palette="Set1")
ggsave("ImiLocInt.png")
ggplot(df, aes(x=df$IM_Loc_01, y=df$IM_Int_01)) +
geom_text(aes(label=df$State), vjust=-1) +
geom_point() +
scale_colour_brewer(palette="Set1")
ggsave("ImiLocInt.png")
df$DiffPop <- df$Pop_Tot_00 - df$Pop_Tot_01
df$DiffPop <- df$Pop_Tot_01 - df$Pop_Tot_00
ggplot(df, aes(x=df$DiffPop)) +
geom_bar()
ggplot(df, aes(x=df$DiffPop)) +
geom_bar(binwidth='x')
ggplot(df, aes(x=df$DiffPop)) +
geom_bar(binwidth=df$DiffPop)
ggplot(df, aes(x=df$DiffPop)) +
geom_bar()
hist(df$DiffPop, break=100)
hist(df$DiffPop, breaks=100)
ggplot(df, aes(x=df$DiffPop, fill=df$State)) +
geom_bar()
ggplot(df, aes(x=df$DiffPop)) +
geom_bar(breaks=100)
ggplot(df, aes(x=df$DiffPop)) +
geom_bar()
mean.diff.pop <- mean(df$DiffPop)
ggplot(df, aes(x=df$DiffPop)) +
geom_vline(xintercept = mean.diff.pop) +
geom_bar()
ggplot(df, aes(x=df$DiffPop)) +
geom_vline(xintercept = mean.diff.pop, color='red') +
geom_bar()
mean.diff.pop
display.brewer.all()
US = map("state", fill = TRUE, plot = FALSE)
Im.Int.01 <- df[order(df$IM_Int_00),]
Im.Int.00 <- df[order(df$IM_Int_01),]
dpt01.Im.Int <- Im.Int.01$State
dpt00.Im.Int <- Im.Int.00$State
match01.Im.Int <- match.map(US, dpt01.Im.Int, exact=FALSE)
match00.Im.Int <- match.map(US, dpt00.Im.Int, exact=FALSE)
Purples <- colorRampPalette(brewer.pal(9,"Purples"))(100)
colors01.Im.Int <- Purples[match01.Im.Int]
colors00.Im.Int <- Purples[match00.Im.Int]
png("Map_IM_Int_01.png")
map("state", fill=TRUE, col=colors01.Im.Int, resolution=0)
text(states.latlon$state, x=states.latlon$longitude, y=states.latlon$latitude)
min <- Im.Int.01$IM_Int_01[1]
max <-  Im.Int.01$IM_Int_01[length(Im.Int.01$IM_Int_01)]
legend("bottomright", legend = trunc(seq(min, max, abs(max-min)/10)), pch = 20, col = Reds[seq(0,63, 63/11)])
dev.off()
png("Map_IM_Int_00.png")
map("state", fill=TRUE, col=colors00.Im.Int, resolution=0)
text(states.latlon$state, x=states.latlon$longitude, y=states.latlon$latitude)
min <- Im.Int.00$IM_Int_00[1]
max <-  Im.Int.00$IM_Int_00[length(Im.Int.00$IM_Int_00)]
legend("bottomright", legend = trunc(seq(min, max, abs(max-min)/10)), pch = 20, col = Reds[seq(0,63, 63/11)])
dev.off()
png("Map_IM_Int_01.png")
map("state", fill=TRUE, col=colors01.Im.Int, resolution=0)
text(states.latlon$state, x=states.latlon$longitude, y=states.latlon$latitude)
min <- Im.Int.01$IM_Int_01[1]
max <-  Im.Int.01$IM_Int_01[length(Im.Int.01$IM_Int_01)]
legend("bottomright", legend = trunc(seq(min, max, abs(max-min)/10)), pch = 20, col = Purples[seq(0,63, 63/11)])
dev.off()
png("Map_IM_Int_00.png")
map("state", fill=TRUE, col=colors00.Im.Int, resolution=0)
text(states.latlon$state, x=states.latlon$longitude, y=states.latlon$latitude)
min <- Im.Int.00$IM_Int_00[1]
max <-  Im.Int.00$IM_Int_00[length(Im.Int.00$IM_Int_00)]
legend("bottomright", legend = trunc(seq(min, max, abs(max-min)/10)), pch = 20, col = Purples[seq(0,63, 63/11)])
dev.off()
hist(df$DiffPop, breaks=100)
ggplot(df, aes(x=df$DiffPop)) +
geom_vline(xintercept = mean.diff.pop, color='red') +
geom_bar()
ggsave("DiffPop.png")
