{
    "contents" : "#===================================================\n#         premier exemple ; ACP-r\n#===================================================\nrm(list = ls()) \nlibrary(FactoMineR)\nf  <-\"F\" ; \n  directory<-paste(f,'://ENSEIGNEMENTS_2015//STAT_E3//SCRIPT_R',sep = '') \n  directory.down<-paste(f,'://ENSEIGNEMENTS_2015//STAT_E3//DATA//',sep = '') \n  file.down<-'EX_PCA_ACTIVITE.txt' ;  \n\n  source(\"F://ENSEIGNEMENTS_2015//STAT_E3//SCRIPT_R//ACP_TOOLS.R\")  \n\n  #-------------------------- formatage du data frame ---------------------------------\n  df<-read.table(paste(directory.down,file.down,sep =''),header = TRUE)\n  id.names<-df[,1]\n  df <- df[,2:15] ; rownames(df)<-id.names\n  \n  # Nommage des variables cat?gorielles\n  df$SEX  <-factor(df$SEX, levels = c(1,2)    ,labels=c(\"Homme\",\"Femme\"))  \n  df$ACT  <-factor(df$ACT, levels = c(1,2,9)  ,labels=c(\"Actif\",\"Non.Actif\",\"Non.pr?cise\"))  \n  df$CIV  <-factor(df$CIV, levels = c(9,2,1)  ,labels=c(\"Non.pr?cise\",\"Marie\",\"Celibataire\"))  \n  df$PAY  <-factor(df$PAY, levels = c(1,2,3,4),labels=c(\"USA\", \"Ouest\",\"Est\",\"Youg\")) \n  \n  #--------------------------------- Options -----------------------------------------------\n  file.nameEXL <-'PCA_ACTIVITE.xlsx'\n  stat.graph <- 0 # visualisation des graphiques stat desc.\n  \n  #----------------------------- Pre requis avant ACP --------------------------------------\n  \n  # 1.-> statistiques g?n?rales\n  va.num<-which(sapply(df,is.numeric))\n  va.cat<-which(sapply(df,is.factor))\n  \n  #-> Box plot full model\n  df.num<- df[,va.num] ;\n  df.cat<- df[,va.cat] ;\n  nb.ind <- dim(df.num)[1]\n  \n  if (stat.graph) \n    { \n     # 2.-> Box plot cat?goriel\n     PROC_BOXPLOT(df[,1] , Datacat = df[,va.cat], p = c(2,2), main.name = names(df)[1] )\n     PROC_BOXPLOT(df[,2] , Datacat = df[,va.cat], p = c(2,2), main.name = names(df)[2] )\n     PROC_BOXPLOT(df[,3] , Datacat = df[,va.cat], p = c(2,2), main.name = names(df)[3] )\n     PROC_BOXPLOT(df[,4] , Datacat = df[,va.cat], p = c(2,2), main.name = names(df)[4] )\n     PROC_BOXPLOT(df[,5] , Datacat = df[,va.cat], p = c(2,2), main.name = names(df)[5] )\n     PROC_BOXPLOT(df[,6] , Datacat = df[,va.cat], p = c(2,2), main.name = names(df)[6] )\n     PROC_BOXPLOT(df[,7] , Datacat = df[,va.cat], p = c(2,2), main.name = names(df)[7] )\n     PROC_BOXPLOT(df[,8] , Datacat = df[,va.cat], p = c(2,2), main.name = names(df)[8] )\n     PROC_BOXPLOT(df[,9] , Datacat = df[,va.cat], p = c(2,2), main.name = names(df)[9] )\n     PROC_BOXPLOT(df[,10], Datacat = df[,va.cat], p = c(2,2), main.name = names(df)[10])\n     \n     # box plot alls variables\n     PROC_BOXPLOTALL(df.num, p = c(1,1))\n     df.num.scale <-apply(df.num,2,scale) ; PROC_BOXPLOTALL(df.num.scale, p = c(1,1), main.name = 'donn?es standardis?es')\n     }\n\n  #-> Statistiques univari?es\n  stat.sum <-apply(df.num,2,summary) ; \n  stat.sd  <-apply(df.num,2,sd) \n  pca.stat <-rbind(stat.sum,stat.sd)\n  \n  #-> Statistiques cat?gorielles: implementation dans une liste\n  stat.cat.list<-list() ; iter <-1\n      for (i in 1:length(va.num))\n        { for (j in 1:length(va.cat))\n            {\n                stat.cat.list[[iter]]<-aggregate(df.num[,i],list(df.cat[,j]),summary); names(stat.cat.list)[iter]<-names(df.num)[i]\n                iter<-iter+1\n            }\n      }\n  #-> Statistiques cat autre forlumation\n  # aggregate(df.num[,i], list(df.cat[,1]),mean) }\n  \n  #-> Matrice des corr?lations  \n  pca.cor<-cor(df.num)\n  \n  #-> Graphique en pairs\n  pairs(df.num)\n \n#=====================================================================================\n#                                      ACP\n#=====================================================================================\n  pca<-PCA(df.num, graph = FALSE)\n \n    #-------------------- NB AXES ET INERTIE -----------------------\n    #-> inertie\n    inertie<-matrix(c(seq(1,length(va.num),1),pca$eig[,3]),ncol = 2) ; colnames(inertie)<-c('axe','% inertie cumul?e')\n    plot(inertie[,2]~inertie[,1],type = 'b',xlab='axe',ylab='% inertie cumul?e')\n    \n    #-> indice de Kaiser\n    axe.kaiser<-which(pca$eig[,1] >= 1)\n   \n    #-> intervalle de confiance d'Anderson\n    Icm<-pca$eig[,1]*exp(-1.96*sqrt(2/(nb.ind-1)))  \n    Icp<-pca$eig[,1]*exp(+1.96*sqrt(2/(nb.ind-1)))  \n    axe.anderson<-as.matrix(cbind(Icm,pca$eig[,1],Icp),ncol = 3)\n    \n    #-> boostrap total sur les axes\n    B = 1000 ; alpha = 0.1 ; nb.axe <-4\n    lam.star <-matrix(0,ncol = nb.axe,nrow = B)  \n    for (i in 1 : B)\n      { boot.lam<- sample(size<-seq(1,nb.ind), replace = TRUE)\n        df.num.star <- df.num[boot.lam,]\n        pca.star<-PCA(df.num.star,graph = FALSE)\n        for (j in 1 : nb.axe)\n          { lam.star[i,j]<-pca.star$eig[j,1]}\n      }  \n   \n    lam.star.mean <-mean(lam.star[,1]) ; lam.star.sd <- sd(lam.star[,1])\n    qt<-quantile(lam.star[,1], c(alpha/2, 1 - alpha/2)) ;  ICm<-qt[[1]] ;ICp<-qt[[2]]  \n    # histogramme\n    hist(lam.star[,1],nclass = 50,cex.main = 0.8,freq = FALSE, cex.lab = 0.7,proba=TRUE, main = paste(\"f2 boostrap : nb = \", B,sep = \"\" ))\n    s<-seq(min(lam.star[,1]),max(lam.star[,1]),le=50)\n    # distribution normale et densit?\n    prov<- dnorm(s,lam.star.mean,lam.star.sd) \n    lines(prov~s,col = 'red')  \n    lines(density(lam.star[,1]),col = 'blue',lty = 2)\n    # limite des intervalles de confiance et moyenne + m?diane\n    abline(v=mean(lam.star[,1]),col = 'red')\n    abline(v=median(lam.star[,1]),col = 'blue')\n    abline(v=ICm,col = 'red',lty = 2)\n    abline(v=ICp,col = 'red',lty = 2)       \n    # graphique des densit?s des axes s?lectionn?s \n    plot(density(lam.star[,1]),col  = 'blue',lty = 1,type ='l',xlim=c(0,10), ylim =c(0,max(lam.star)),\n         main = 'densit? axes',cex.main = 0.6,xlab = '',ylab = '')\n    text(x=mean(lam.star[,1]),y = 1,label = paste('Axe ',1,sep = ''),cex =0.7,col = 'red')\n    for (i in 2: nb.axe)\n      { \n        lines(density(lam.star[,i]),col = 'blue' ,lty = 1)\n        text(x=mean(lam.star[,i]),y = 1,label = paste('Axe ',i,sep = ''),cex =0.7,col = 'red')\n      }\n    \n    #-------------------- VARIABLES ET QUALITE DE REPRESENTATION -----------------------\n     pca.var<- pca$var$coord ; colnames(pca.var)<-paste('axes ',seq(1,5,1),sep ='')\n     pca.var.qlt<-pca$var$cos2[,c(1,2)]\n     pca.var.qlt<-cbind(pca.var.qlt,(apply(pca.var.qlt,1,sum))) ; colnames(pca.var.qlt)[3]<-'Sum qtl'\n    \n    #-------------------- INDIVIDUS ET CONTRIBUTION RELATIVE -----------------------\n     pca.ind     <- pca$ind$coord ; colnames(pca.ind)<-paste('axes ',seq(1,5,1),sep ='')\n     pca.ind.ctr <- pca$ind$contrib[,c(1,2)]\n    \n    #-------------------- GRAPHIQUE PCA  ----------------------- -------------------------\n     plot.PCA(pca,axes = c(1,2),choix = 'var',cex.main = 0.8)\n     plot.PCA(pca,axes = c(1,2),choix = 'ind',cex.main = 0.8)\n     \n     #-------------------- GRAPHIQUES PCA AVEC VARIABLES CATEGORIELLEE ET ELLIPSOIDE DE CONFIANCE -----------------------\n     for (i in 1 : length(va.cat))\n        { \n          df.acp <-cbind(df.num,df.cat[,i]);  names(df.acp)[(length(va.num)+1)]<-names(df.cat)[i];\n          res.pca<-PCA(df.acp,ncp = 2,quali.sup = (length(va.num)+1),graph = FALSE)\n          concat.data   <-cbind.data.frame(df.acp[,11],res.pca$ind$coor)\n          ellipse.coord <- coord.ellipse(concat.data,bary = TRUE)\n          plot.PCA(res.pca,axes = c(1,2),choix = 'ind',cex.main = 0.8,title = names(df.acp)[11],\n                   col.quali = 'red',col.ind = 'blue',ellipse = ellipse.coord)\n         \n        }\n\n#=====================================================================================\n#                            EXPORTATION EXCEL\n#=====================================================================================\n     \nexport2excel<-0\nif(export2excel)\n{\n  library(excel.link)\n  xls=xl.get.excel() ; \n  # test l'existance du fichier\n  if(file.exists(paste(directory.down,file.nameEXL,sep = '')))\n  {xl.workbook.open(paste(directory.down,file.nameEXL,sep = ''))        \n  }else{xl.workbook.add() ;  wb<-xl.workbooks()}        \n  # ouverture d'exc et addition d'un classeur\n  sheets<-xl.sheets() ; \n  #-> Teste l'existence de la feuille\n  if(length(unique(is.element(sheets,'PCA_STAT')))== 1){xl.sheet.add(\"PCA_STAT\")}\n  # addition d'une feuille\n  xl.sheet.activate(\"PCA_STAT\")\n  #--> REFERENCES\n  idl<- 3 ; rng=xls[[\"Activesheet\"]]$Cells(idl,3)               ; nxt=xl.write(\"PCA\",rng)\n  idl<- idl + 1 ; rng=xls[[\"Activesheet\"]]$Cells(idl,3)         ; nxt=xl.write('STATISTIQUES DESCRIPTIVES' ,rng)\n  idl<- idl + 1 ; rng=xls[[\"Activesheet\"]]$Cells(idl,3)         ; nxt=xl.write('statistiques globales' ,rng)\n  idl<- idl + 1 ; rng=xls[[\"Activesheet\"]]$Cells(idl,3)         ; nxt=xl.write(pca.stat,rng,row.names=TRUE,col.names=TRUE)\n  idl<- idl + 9 ; rng=xls[[\"Activesheet\"]]$Cells(idl,3)         ; nxt=xl.write('Statistiques cat?gorielles' ,rng)\n  for (i in 1 : length(stat.cat.list))\n      {   temp <- as.matrix(stat.cat.list[[i]]) ; nl<-dim(temp)[1] \n          colnames(temp)[1] <- names(stat.cat.list)[i]\n          idl<- idl + nl + 2 ; rng=xls[[\"Activesheet\"]]$Cells(idl,3)    ; nxt=xl.write(temp,rng,row.names=TRUE,col.names=TRUE)        \n      }\n  \n   if(length(unique(is.element(sheets,'PCA')))== 1){xl.sheet.add(\"PCA\")}\n  # addition d'une feuille\n  xl.sheet.activate(\"PCA\")\n  idl <- 3       ; rng=xls[[\"Activesheet\"]]$Cells(idl,3)  ; nxt=xl.write('Matrice des corr?lations',rng)    \n  idl<- idl + 1 ; rng=xls[[\"Activesheet\"]]$Cells(idl,3)  ; nxt=xl.write(pca.cor,rng,row.names=TRUE,col.names=TRUE)\n  idl<- idl + 10 ; rng=xls[[\"Activesheet\"]]$Cells(idl,3)  ; nxt=xl.write(pca.stat,rng,row.names=TRUE,col.names=TRUE)\n  idl<- idl + 10 ; rng=xls[[\"Activesheet\"]]$Cells(idl,3)  ; nxt=xl.write('variables coordonn?es',rng)\n  idl<- idl + 1  ; rng=xls[[\"Activesheet\"]]$Cells(idl,3)  ; nxt=xl.write(pca.var,rng,row.names=TRUE,col.names=TRUE)\n  idl<- idl + 10 ; rng=xls[[\"Activesheet\"]]$Cells(idl,3)  ; nxt=xl.write(' qualit? de r?pr?sentaion des variables',rng)\n  idl<- idl + 1  ; rng=xls[[\"Activesheet\"]]$Cells(idl,3)  ; nxt=xl.write(pca.var.qlt,rng,row.names=TRUE,col.names=TRUE)\n  idl<- idl + 10 ; rng=xls[[\"Activesheet\"]]$Cells(idl,3)  ; nxt=xl.write('individus corrdonn?es',rng)\n  idl<- idl + 1  ; rng=xls[[\"Activesheet\"]]$Cells(idl,3)  ; nxt=xl.write(pca.ind,rng,row.names=TRUE,col.names=TRUE)\n  idl<- idl + 16 ; rng=xls[[\"Activesheet\"]]$Cells(idl,3)  ; nxt=xl.write('Qualit? de repr?sentation individus',rng)\n  idl<- idl + 1  ; rng=xls[[\"Activesheet\"]]$Cells(idl,3)  ; nxt=xl.write(pca.ind.qlt,rng,row.names=TRUE,col.names=TRUE)\n  \n  \n # xl.workbook.save(paste(directory.down,file.nameEXL,sep = ''))\n}\n\n\n",
    "created" : 1444383113172.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "815626777",
    "id" : "25DC8AA1",
    "lastKnownWriteTime" : 1444144867,
    "path" : "~/FouilleR/STAT_BR/ACP__ACTIVITE.R",
    "project_path" : null,
    "properties" : {
    },
    "relative_order" : 2,
    "source_on_save" : false,
    "type" : "r_source"
}